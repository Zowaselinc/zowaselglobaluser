{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from \"@/services/auth\";\nexport default {\n  name: 'ResetPassword',\n  computed: {\n    hasNumbers() {\n      return /[0-9]+/.test(this.password);\n    },\n    hasSpecial() {\n      return /[!@~#$%^.,'\"&*\\(\\)\\/]+/.test(this.password);\n    },\n    hasUppercase() {\n      return /[A-Z]+/.test(this.password);\n    },\n    characterMin() {\n      return this.password.length >= 8;\n    },\n    mustMatch() {\n      return this.password == this.confirmPassword && this.password;\n    },\n    strength() {\n      var strength = 0;\n      if (this.characterMin) {\n        strength += 1;\n      }\n      if (this.hasNumbers) {\n        strength += 1;\n      }\n      if (this.hasUppercase) {\n        strength += 1;\n      }\n      if (this.hasSpecial) {\n        strength += 1;\n      }\n      return strength;\n    }\n  },\n  data() {\n    return {\n      password: \"\",\n      confirmPassword: \"\",\n      token: this.$route.params.token\n    };\n  },\n  methods: {\n    resetPassword() {\n      let vm = this;\n      if (this.password == this.confirmPassword) {\n        AuthService.resetPassword({\n          token: vm.token,\n          password: vm.password\n        }, response => {\n          if (response.status) {\n            vm.$router.push('/resetsuccess');\n          }\n        });\n      }\n    }\n  },\n  mounted() {\n    let vm = this;\n    AuthService.verifyResetToken(this.token, response => {\n      if (!response.status) {\n        vm.$router.replace('/login');\n      }\n    });\n  }\n};","map":{"version":3,"mappings":";AAyCI,OAAOA,WAAU,MAAO,iBAAiB;AACzC,eAAe;EACXC,IAAI,EAAC,eAAe;EACpBC,QAAO,EAAI;IACPC,UAAU,GAAE;MACR,OAAO,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;IACvC,CAAC;IACDC,UAAU,GAAE;MACR,OAAO,wBAAwB,CAACF,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;IACvD,CAAC;IACDE,YAAY,GAAE;MACV,OAAO,QAAQ,CAACH,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;IACvC,CAAC;IACDG,YAAY,GAAE;MACV,OAAO,IAAI,CAACH,QAAQ,CAACI,MAAK,IAAK,CAAC;IACpC,CAAC;IACDC,SAAS,GAAE;MACP,OAAQ,IAAI,CAACL,QAAO,IAAK,IAAI,CAACM,eAAe,IAAK,IAAI,CAACN,QAAQ;IACnE,CAAC;IACDO,QAAQ,GAAE;MACN,IAAIA,QAAO,GAAI;MACf,IAAG,IAAI,CAACJ,YAAY,EAAC;QACjBI,QAAO,IAAK,CAAC;MACjB;MACA,IAAG,IAAI,CAACT,UAAU,EAAC;QACfS,QAAO,IAAK,CAAC;MACjB;MACA,IAAG,IAAI,CAACL,YAAY,EAAC;QACjBK,QAAO,IAAK,CAAC;MACjB;MACA,IAAG,IAAI,CAACN,UAAU,EAAC;QACfM,QAAO,IAAK,CAAC;MACjB;MACA,OAAOA,QAAQ;IACnB;EACJ,CAAC;EACDC,IAAI,GAAE;IACF,OAAO;MACHR,QAAO,EAAI,EAAE;MACbM,eAAc,EAAI,EAAE;MACpBG,KAAI,EAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF;IAC/B,CAAC;EACL,CAAC;EACDG,OAAM,EAAI;IACNC,aAAa,GAAE;MACX,IAAIC,EAAC,GAAI,IAAI;MACb,IAAG,IAAI,CAACd,QAAO,IAAK,IAAI,CAACM,eAAe,EAAC;QACrCX,WAAW,CAACkB,aAAa,CAAC;UACtBJ,KAAI,EAAIK,EAAE,CAACL,KAAK;UAChBT,QAAO,EAAIc,EAAE,CAACd;QAClB,CAAC,EAAEe,QAAQ,IAAG;UACV,IAAGA,QAAQ,CAACC,MAAM,EAAC;YACfF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;UACpC;QACJ,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;EACDC,OAAO,GAAE;IACL,IAAIL,EAAC,GAAI,IAAI;IACbnB,WAAW,CAACyB,gBAAgB,CAAC,IAAI,CAACX,KAAK,EAAEM,QAAQ,IAAG;MAChD,IAAG,CAACA,QAAQ,CAACC,MAAM,EAAC;QAChBF,EAAE,CAACG,OAAO,CAACI,OAAO,CAAC,QAAQ,CAAC;MAChC;IACJ,CAAC;EACL;AACJ","names":["AuthService","name","computed","hasNumbers","test","password","hasSpecial","hasUppercase","characterMin","length","mustMatch","confirmPassword","strength","data","token","$route","params","methods","resetPassword","vm","response","status","$router","push","mounted","verifyResetToken","replace"],"sourceRoot":"","sources":["/home/kingjrn/King/Zowasel/GlobalThirdPartyDashboard/src/pages/auth/ResetPassword.vue"],"sourcesContent":["<template>\n    <div class=\"big-container\">\n        <div class=\"left-content\">\n        <h1 class=\"text-center\">Reset Password</h1>\n        <p id=\"emailHelp\" class=\"form-text text-muted text-center\">Choose a new password for your account</p>\n        \n         <form>         \n            \n            <div class=\"form-group\">\n                <label for=\"\">New Password</label>\n                <input type=\"password\" v-model=\"password\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Enter new password\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Password</label>\n                <input type=\"password\" v-model=\"confirmPassword\" class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Confirm your new password\">\n            </div>\n            \n            \n            <div class=\"buttons\">\n                <div class=\"form-group\">\n                    <button type=\"button\" @click=\"resetPassword()\" class=\"btn  btn-lg btn-block\">Reset Password</button>\n                </div>\n              \n                <div class=\"form-group\">\n                    <button type=\"button\" @click=\"$router.replace('/login')\" class=\"btn skip btn-lg btn-block\">Back to login</button>\n                </div>\n                \n                \n            </div>\n           \n            \n        </form>\n       \n        </div>\n        <div class=\"right-content\">\n            <img src=\"@/assets/images/backgrounds/right-side.png\" alt=\"\">\n        </div>\n    </div>\n</template>\n\n<script>\n    import AuthService from \"@/services/auth\";\n    export default {\n        name:'ResetPassword',\n        computed : {\n            hasNumbers(){\n                return /[0-9]+/.test(this.password);\n            },\n            hasSpecial(){\n                return /[!@~#$%^.,'\"&*\\(\\)\\/]+/.test(this.password);\n            },\n            hasUppercase(){\n                return /[A-Z]+/.test(this.password);\n            },\n            characterMin(){\n                return this.password.length >= 8;\n            },\n            mustMatch(){\n                return (this.password == this.confirmPassword) && this.password;\n            },\n            strength(){\n                var strength = 0 ;\n                if(this.characterMin){\n                    strength += 1;\n                }\n                if(this.hasNumbers){\n                    strength += 1;\n                }\n                if(this.hasUppercase){\n                    strength += 1;\n                }\n                if(this.hasSpecial){\n                    strength += 1;\n                }\n                return strength;\n            }\n        },\n        data(){\n            return {\n                password : \"\",\n                confirmPassword : \"\",\n                token : this.$route.params.token\n            };\n        },\n        methods : {\n            resetPassword(){\n                let vm = this;\n                if(this.password == this.confirmPassword){\n                    AuthService.resetPassword({\n                        token : vm.token,\n                        password : vm.password\n                    },(response)=>{\n                        if(response.status){\n                            vm.$router.push('/resetsuccess');\n                        }\n                    });\n                }\n            }\n        },\n        mounted(){\n            let vm = this;\n            AuthService.verifyResetToken(this.token,(response)=>{\n                if(!response.status){\n                    vm.$router.replace('/login');\n                }\n            })\n        }\n    }\n</script>\n\n<style  scoped>\n    .big-container{\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: row;\n    }\n    .left-content{\n        width: 65%;\n        height: 100%;\n        padding: 10% 15% 0% 15%;\n       \n        box-sizing: border-box;\n    }\n    .lines{\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        margin: 20px 0px 20px 0px;\n    }\n    .line{\n        border: 1px solid #B0B0B0;\n        width: 30%;\n        margin: -15px 10px 0px 5px;\n    }\n    input{\n        padding: 10px;\n    }\n  \n    .buttons{\n        margin-top: 50px;\n    }\n    button{\n        background-color:  #008D40;\n        width: 100%;\n        color: white;\n    }\n    .skip{\n        background: #2D3748;\n\n    }\n    .form-group{\n        margin-bottom: 15px;\n    }\n  \n    .right-content{\n        width: 35%;\n        height: 100vh;\n    }\n    .right-content img{\n        width: 100%;\n        height: 100%;\n    }\n\n    .last-text{\n        margin-top: 70px;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}