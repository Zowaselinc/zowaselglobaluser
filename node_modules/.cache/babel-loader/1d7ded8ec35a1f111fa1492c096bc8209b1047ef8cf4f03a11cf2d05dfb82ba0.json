{"ast":null,"code":"import axios from 'axios';\nimport config from '@/config';\nconst REGISTER_USER_PATH = type => type ? `register/${type}` : \"register\";\nconst LOGIN_USER_PATH = () => \"login\";\nconst SEND_VERIFICATION_PATH = () => \"register/verify\";\nconst VERIFY_CODE_PATH = () => \"register/confirm\";\nconst SEND_RESET_EMAIL_PATH = () => \"password/email\";\nconst VERIFY_RESET_TOKEN_PATH = () => \"password/verify\";\nconst RESET_PASSWORD_PATH = () => \"password/reset\";\nexport default {\n  loginUser: function (loginData, callback) {\n    axios.post(config.BASE_URL + LOGIN_USER_PATH(), loginData).then(response => {\n      callback(response.data);\n    }).catch(error => {});\n  },\n  registerUser: function (registerData, callback) {\n    axios.post(config.BASE_URL + REGISTER_USER_PATH(registerData.type), registerData).then(response => {\n      callback(response.data);\n    }).catch(error => {});\n  },\n  sendVerification: function (email) {\n    axios.post(config.BASE_URL + SEND_VERIFICATION_PATH(), {\n      email: email\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {});\n  },\n  confirmVerification: function (email, code, callback) {\n    axios.post(config.BASE_URL + VERIFY_CODE_PATH(), {\n      email: email,\n      code: code\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {});\n  },\n  sendResetEmail: function (email, callback) {\n    axios.post(config.BASE_URL + SEND_RESET_EMAIL_PATH(), {\n      email: email\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {});\n  },\n  resetPassword: function (data, callback) {\n    axios.post(config.BASE_URL + RESET_PASSWORD_PATH(), data).then(response => {\n      callback(response.data);\n    }).catch(error => {});\n  },\n  verifyResetToken: function (token, callback) {\n    axios.post(config.BASE_URL + VERIFY_RESET_TOKEN_PATH(), {\n      token: token\n    }).then(response => {\n      callback(response.data);\n    }).catch(error => {});\n  }\n};","map":{"version":3,"names":["axios","config","REGISTER_USER_PATH","type","LOGIN_USER_PATH","SEND_VERIFICATION_PATH","VERIFY_CODE_PATH","SEND_RESET_EMAIL_PATH","VERIFY_RESET_TOKEN_PATH","RESET_PASSWORD_PATH","loginUser","loginData","callback","post","BASE_URL","then","response","data","catch","error","registerUser","registerData","sendVerification","email","console","log","confirmVerification","code","sendResetEmail","resetPassword","verifyResetToken","token"],"sources":["/home/kingjrn/King/Zowasel/GlobalThirdPartyDashboard/src/services/auth.js"],"sourcesContent":["\nimport axios from 'axios';\n\nimport config from '@/config';\n\nconst REGISTER_USER_PATH = (type) => type ? `register/${type}` : \"register\";\nconst LOGIN_USER_PATH = () => \"login\";\nconst SEND_VERIFICATION_PATH = () => \"register/verify\";\nconst VERIFY_CODE_PATH = () => \"register/confirm\";\nconst SEND_RESET_EMAIL_PATH = () => \"password/email\";\nconst VERIFY_RESET_TOKEN_PATH = () => \"password/verify\";\nconst RESET_PASSWORD_PATH = () => \"password/reset\";\n\n\nexport default {\n\n    loginUser : function(loginData,callback){\n        axios.post( \n            config.BASE_URL + LOGIN_USER_PATH() , \n            loginData\n        ).then((response)=>{\n            callback(response.data);\n        }).catch((error)=>{\n\n        });\n    },\n\n    registerUser : function(registerData,callback){\n        axios.post( \n            config.BASE_URL + REGISTER_USER_PATH(registerData.type) , \n            registerData\n        ).then((response)=>{\n            callback(response.data)\n        }).catch((error)=>{\n\n        });\n    },\n\n    sendVerification : function(email){\n        axios.post( \n            config.BASE_URL + SEND_VERIFICATION_PATH() , \n            { email : email }\n        ).then((response)=>{\n            console.log(response);\n        }).catch((error)=>{\n\n        });\n    },\n\n    confirmVerification : function(email,code,callback){\n        axios.post( \n            config.BASE_URL + VERIFY_CODE_PATH() , \n            { email : email, code : code }\n        ).then((response)=>{\n            callback(response.data);\n        }).catch((error)=>{\n\n        });\n    },\n\n    sendResetEmail : function(email,callback){\n        axios.post( \n            config.BASE_URL + SEND_RESET_EMAIL_PATH() , \n            { email : email }\n        ).then((response)=>{\n            callback(response.data);\n        }).catch((error)=>{\n\n        });\n    },\n\n    resetPassword : function(data,callback){\n        axios.post( \n            config.BASE_URL + RESET_PASSWORD_PATH() , \n            data\n        ).then((response)=>{\n            callback(response.data);\n        }).catch((error)=>{\n\n        });\n    },\n\n    verifyResetToken : function(token,callback){\n        axios.post( \n            config.BASE_URL + VERIFY_RESET_TOKEN_PATH(), \n            { token : token }\n        ).then((response)=>{\n            callback(response.data);\n        }).catch((error)=>{\n\n        });\n    },\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}