{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/images/backgrounds/right-side.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-8fc38672\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"big-container\"\n};\nconst _hoisted_2 = {\n  class: \"left-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Reset Password\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"emailHelp\",\n  class: \"form-text text-muted text-center\"\n}, \"Choose a new password for your account\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"New Password\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Password\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"buttons\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"right-content\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"form\", null, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.password = $event),\n    class: \"form-control\",\n    id: \"formGroupExampleInput\",\n    placeholder: \"Enter new password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    class: \"form-control\",\n    id: \"formGroupExampleInput2\",\n    placeholder: \"Confirm your new password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.resetPassword()),\n    class: \"btn btn-lg btn-block\"\n  }, \"Reset Password\")]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$router.replace('/login')),\n    class: \"btn skip btn-lg btn-block\"\n  }, \"Back to login\")])])])]), _hoisted_12]);\n}","map":{"version":3,"mappings":";OAmCiBA,UAAgD;;;EAlCxDC,KAAK,EAAC;AAAe;;EACjBA,KAAK,EAAC;AAAc;gEACzBC,oBAA2C;EAAvCD,KAAK,EAAC;AAAa,GAAC,gBAAc;gEACtCC,oBAAqG;EAAlGC,EAAE,EAAC,WAAW;EAACF,KAAK,EAAC;GAAmC,wCAAsC;;EAIxFA,KAAK,EAAC;AAAY;gEACnBC,oBAAkC;EAA3BE,GAAG,EAAC;AAAE,GAAC,cAAY;;EAGzBH,KAAK,EAAC;AAAY;gEACnBC,oBAA8B;EAAvBE,GAAG,EAAC;AAAE,GAAC,UAAQ;;EAKrBH,KAAK,EAAC;AAAS;;EACXA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;iEAW/BC,oBAEM;EAFDD,KAAK,EAAC;AAAe,iBACtBC,oBAA6D;EAAxDG,GAAgD,EAAhDL,UAAgD;EAACM,GAAG,EAAC;;;;uBAlClEC,oBAoCM,OApCNC,UAoCM,GAnCFN,oBA+BM,OA/BNO,UA+BM,GA9BNC,UAA2C,EAC3CC,UAAqG,EAEpGT,oBAyBM,eAvBHA,oBAGM,OAHNU,UAGM,GAFFC,UAAkC,kBAClCX,oBAA2H;IAApHY,IAAI,EAAC,UAAU;+DAAUC,cAAQ;IAAEd,KAAK,EAAC,cAAc;IAACE,EAAE,EAAC,uBAAuB;IAACa,WAAW,EAAC;iDAAtED,cAAQ,OAE5Cb,oBAGM,OAHNe,UAGM,GAFFC,UAA8B,kBAC9BhB,oBAA0I;IAAnIY,IAAI,EAAC,UAAU;+DAAUC,qBAAe;IAAEd,KAAK,EAAC,cAAc;IAACE,EAAE,EAAC,wBAAwB;IAACa,WAAW,EAAC;iDAA9ED,qBAAe,OAInDb,oBAUM,OAVNiB,UAUM,GATFjB,oBAEM,OAFNkB,WAEM,GADFlB,oBAAoG;IAA5FY,IAAI,EAAC,QAAQ;IAAEO,OAAK,sCAAEC,sBAAa;IAAIrB,KAAK,EAAC;KAAwB,gBAAc,KAG/FC,oBAEM,OAFNqB,WAEM,GADFrB,oBAAiH;IAAzGY,IAAI,EAAC,QAAQ;IAAEO,OAAK,sCAAEG,YAAO,CAACC,OAAO;IAAYxB,KAAK,EAAC;KAA4B,eAAa,WAUpHyB,WAEM","names":["_imports_0","class","_createElementVNode","id","for","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","type","$data","placeholder","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","onClick","$options","_hoisted_11","_ctx","replace","_hoisted_12"],"sourceRoot":"","sources":["/home/kingjrn/King/Zowasel/GlobalThirdPartyDashboard/src/pages/auth/ResetPassword.vue"],"sourcesContent":["<template>\n    <div class=\"big-container\">\n        <div class=\"left-content\">\n        <h1 class=\"text-center\">Reset Password</h1>\n        <p id=\"emailHelp\" class=\"form-text text-muted text-center\">Choose a new password for your account</p>\n        \n         <form>         \n            \n            <div class=\"form-group\">\n                <label for=\"\">New Password</label>\n                <input type=\"password\" v-model=\"password\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Enter new password\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"\">Password</label>\n                <input type=\"password\" v-model=\"confirmPassword\" class=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"Confirm your new password\">\n            </div>\n            \n            \n            <div class=\"buttons\">\n                <div class=\"form-group\">\n                    <button type=\"button\" @click=\"resetPassword()\" class=\"btn  btn-lg btn-block\">Reset Password</button>\n                </div>\n              \n                <div class=\"form-group\">\n                    <button type=\"button\" @click=\"$router.replace('/login')\" class=\"btn skip btn-lg btn-block\">Back to login</button>\n                </div>\n                \n                \n            </div>\n           \n            \n        </form>\n       \n        </div>\n        <div class=\"right-content\">\n            <img src=\"@/assets/images/backgrounds/right-side.png\" alt=\"\">\n        </div>\n    </div>\n</template>\n\n<script>\n    import AuthService from \"@/services/auth\";\n    export default {\n        name:'ResetPassword',\n        computed : {\n            hasNumbers(){\n                return /[0-9]+/.test(this.password);\n            },\n            hasSpecial(){\n                return /[!@~#$%^.,'\"&*\\(\\)\\/]+/.test(this.password);\n            },\n            hasUppercase(){\n                return /[A-Z]+/.test(this.password);\n            },\n            characterMin(){\n                return this.password.length >= 8;\n            },\n            mustMatch(){\n                return (this.password == this.confirmPassword) && this.password;\n            },\n            strength(){\n                var strength = 0 ;\n                if(this.characterMin){\n                    strength += 1;\n                }\n                if(this.hasNumbers){\n                    strength += 1;\n                }\n                if(this.hasUppercase){\n                    strength += 1;\n                }\n                if(this.hasSpecial){\n                    strength += 1;\n                }\n                return strength;\n            }\n        },\n        data(){\n            return {\n                password : \"\",\n                confirmPassword : \"\",\n                token : this.$route.params.token\n            };\n        },\n        methods : {\n            resetPassword(){\n                let vm = this;\n                if(this.password == this.confirmPassword){\n                    AuthService.resetPassword({\n                        token : vm.token,\n                        password : vm.password\n                    },(response)=>{\n                        if(response.status){\n                            vm.$router.push('/resetsuccess');\n                        }\n                    });\n                }\n            }\n        },\n        mounted(){\n            let vm = this;\n            AuthService.verifyResetToken(this.token,(response)=>{\n                if(!response.status){\n                    vm.$router.replace('/login');\n                }\n            })\n        }\n    }\n</script>\n\n<style  scoped>\n    .big-container{\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: row;\n    }\n    .left-content{\n        width: 65%;\n        height: 100%;\n        padding: 10% 15% 0% 15%;\n       \n        box-sizing: border-box;\n    }\n    .lines{\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        margin: 20px 0px 20px 0px;\n    }\n    .line{\n        border: 1px solid #B0B0B0;\n        width: 30%;\n        margin: -15px 10px 0px 5px;\n    }\n    input{\n        padding: 10px;\n    }\n  \n    .buttons{\n        margin-top: 50px;\n    }\n    button{\n        background-color:  #008D40;\n        width: 100%;\n        color: white;\n    }\n    .skip{\n        background: #2D3748;\n\n    }\n    .form-group{\n        margin-bottom: 15px;\n    }\n  \n    .right-content{\n        width: 35%;\n        height: 100vh;\n    }\n    .right-content img{\n        width: 100%;\n        height: 100%;\n    }\n\n    .last-text{\n        margin-top: 70px;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}