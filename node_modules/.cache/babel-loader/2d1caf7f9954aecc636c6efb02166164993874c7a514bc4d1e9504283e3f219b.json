{"ast":null,"code":"import UserService from \"@/services/user\";\nimport axios from 'axios';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      userData: !n\n    };\n  },\n  mounted() {\n    var tokenValue = this.$store.state.authData;\n    if (tokenValue && tokenValue != null) {\n      axios.defaults.headers.common = {\n        authorization: tokenValue.token\n      };\n    } else {\n      axios.defaults.headers.common = {};\n    }\n    if (this.$store.state.authData) {\n      UserService.getUser(this.$store.state.authData.key, response => {\n        if (!response.error) {\n          this.$store.dispatch('setUser', response.data);\n          this.userData = this.$store.state.user;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAMA,OAAOA,WAAU,MAAO,iBAAiB;AACzC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAACC;IACb;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAIC,UAAS,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAQ;IAC3C,IAAIH,UAAS,IAAKA,UAAS,IAAK,IAAI,EAAE;MACpCN,KAAK,CAACU,QAAQ,CAACC,OAAO,CAACC,MAAK,GAAI;QAC9BC,aAAa,EAAEP,UAAU,CAACQ;MAC5B;IACF,OAAO;MACLd,KAAK,CAACU,QAAQ,CAACC,OAAO,CAACC,MAAK,GAAI,CAAC,CAAC;IACpC;IACA,IAAG,IAAI,CAACL,MAAM,CAACC,KAAK,CAACC,QAAQ,EAAC;MAC5BV,WAAW,CAACgB,OAAO,CAAC,IAAI,CAACR,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACO,GAAG,EAAGC,QAAQ,IAAK;QAClE,IAAI,CAACA,QAAQ,CAACC,KAAK,EAAE;UACnB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,SAAS,EAAEF,QAAQ,CAACf,IAAI;UAC7C,IAAI,CAACC,QAAO,GAAI,IAAI,CAACI,MAAM,CAACC,KAAK,CAACY,IAAI;QAExC;MACF,CAAC;IACD;EACF;AACF","names":["UserService","axios","name","data","userData","n","mounted","tokenValue","$store","state","authData","defaults","headers","common","authorization","token","getUser","key","response","error","dispatch","user"],"sourceRoot":"","sources":["/home/kingjrn/King/Zowasel/GlobalThirdPartyDashboard/src/App.vue"],"sourcesContent":["<template>\n  <router-view />\n\n</template>\n\n<script>\nimport UserService from \"@/services/user\";\nimport axios from 'axios';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      userData: !n\n    }\n  },\n  mounted() {\n    var tokenValue = this.$store.state.authData;\n    if (tokenValue && tokenValue != null) {\n      axios.defaults.headers.common = {\n        authorization: tokenValue.token,\n      }\n    } else {\n      axios.defaults.headers.common = {};\n    }\n    if(this.$store.state.authData){\n      UserService.getUser(this.$store.state.authData.key, (response) => {\n      if (!response.error) {\n        this.$store.dispatch('setUser', response.data)\n        this.userData = this.$store.state.user;\n\n      }\n    })\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  /* font-family: Avenir, Helvetica, Arial, sans-serif; */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}