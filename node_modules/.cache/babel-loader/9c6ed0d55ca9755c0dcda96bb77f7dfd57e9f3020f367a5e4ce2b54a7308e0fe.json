{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'App',\n  mounted() {\n    var tokenValue = this.$store.state.authData;\n    if (tokenValue && tokenValue != null) {\n      axios.defaults.headers.common = {\n        authorization: tokenValue\n      };\n    } else {\n      axios.defaults.headers.common = {};\n    }\n  },\n  data() {\n    return {\n      userData: null\n    };\n  },\n  mounted() {\n    UserService.getUser(this.$store.state.authData.key, response => {\n      if (!response.error) {\n        this.$store.dispatch('setUser', response.data);\n        this.userData = this.$store.state.user;\n      }\n    });\n  }\n};","map":{"version":3,"mappings":"AAMA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,OAAO,GAAG;IACR,IAAIC,UAAS,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAQ;IAC3C,IAAIH,UAAS,IAAKA,UAAU,IAAE,IAAI,EAAE;MAClCH,KAAK,CAACO,QAAQ,CAACC,OAAO,CAACC,MAAK,GAAI;QAC9BC,aAAa,EAAEP;MACjB;IACF,CAAC,MAAI;MACHH,KAAK,CAACO,QAAQ,CAACC,OAAO,CAACC,MAAK,GAAI,CAAC,CAAC;IACpC;EACF,CAAC;EACDE,IAAI,GAAG;IACD,OAAO;MACHC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDV,OAAO,GAAG;IACNW,WAAW,CAACC,OAAO,CAAC,IAAI,CAACV,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACS,GAAG,EAAGC,QAAQ,IAAK;MAC9D,IAAI,CAACA,QAAQ,CAACC,KAAK,EAAE;QACjB,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,SAAS,EAAEF,QAAQ,CAACL,IAAI;QAC7C,IAAI,CAACC,QAAO,GAAI,IAAI,CAACR,MAAM,CAACC,KAAK,CAACc,IAAI;MAE1C;IACJ,CAAC;EAEL;AACJ","names":["axios","name","mounted","tokenValue","$store","state","authData","defaults","headers","common","authorization","data","userData","UserService","getUser","key","response","error","dispatch","user"],"sourceRoot":"","sources":["/home/kingjrn/King/Zowasel/GlobalThirdPartyDashboard/src/App.vue"],"sourcesContent":["<template>\n  <router-view />\n\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'App',\n  mounted() {\n    var tokenValue = this.$store.state.authData;\n    if (tokenValue && tokenValue!=null) {\n      axios.defaults.headers.common = {\n        authorization: tokenValue,\n      }\n    }else{\n      axios.defaults.headers.common = {};\n    }\n  },\n  data() {\n        return {\n            userData: null\n        }\n    },\n    mounted() {\n        UserService.getUser(this.$store.state.authData.key, (response) => {\n            if (!response.error) {\n                this.$store.dispatch('setUser', response.data)\n                this.userData = this.$store.state.user;\n\n            }\n        })\n\n    }\n}\n</script>\n\n<style>\n#app {\n  /* font-family: Avenir, Helvetica, Arial, sans-serif; */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}